apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-server
  name: streaming-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: streaming-server
    spec:
      containers:
      - image: codeworksio/streaming-server
        name: streaming-server
        ports:
        - containerPort: 1935
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/streaming
          name: streaming-server-claim0
      restartPolicy: Always
      volumes:
      - name: streaming-server-claim0
        persistentVolumeClaim:
          claimName: streaming-server-claim0
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-server
  name: streaming-server
spec:
  ports:
  - port: 1935
    targetPort: 1935
  - port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: streaming-server
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-server-claim0
  name: streaming-server-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-consumer
  name: streaming-consumer
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: streaming-consumer
    spec:
      containers:
      - image: codeworksio/nginx
        name: streaming-consumer
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /var/www
          name: streaming-consumer-claim0
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: streaming-consumer-claim0
        persistentVolumeClaim:
          claimName: streaming-consumer-claim0
          readOnly: true
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-consumer
  name: streaming-consumer
spec:
  ports:
  - port: 9999
    targetPort: 8080
  selector:
    io.kompose.service: streaming-consumer
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: streaming-consumer-claim0
  name: streaming-consumer-claim0
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}
